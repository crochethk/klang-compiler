/**
 * Tries out:
 *     - multi-statement
 *     - declaration
 *     - assignment
 */
fn sum_odd_from_to(acc: int, begin:int, end:int): int {
    if begin > end {  // Base case: stop when current exceeds target
        return acc;
    } else {
        if is_odd(begin) {
            return sum_odd_from_to(acc + begin, begin+1, end);
        }
        else {
            return sum_odd_from_to(acc, begin+1, end);
        }
    }
}

fn is_odd(number: int): bool {
    // return number % 2 != 0;
    return number - (number/2) * 2 != 0;
}

fn ___main___(): int {
    let the_start :int;
    let the_end :int;
    the_start = 1;
    the_end = 15;
    return sum_odd_from_to(0, the_start, the_end); // -> 64
}